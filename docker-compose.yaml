services:
  # Kafka in KRaft mode (no ZooKeeper needed)
  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      CLUSTER_ID: "1qHVXKIpRMGuDvstsHfpJA"
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:29093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_OPENTELEMETRY_ENABLED: "false"
      KAFKA_OPENTELEMETRY_METRICS_EXPORTERS: "none"
    volumes:
      - ./kafka:/kafka
    command:
      - sh
      - -c
      - (sh /kafka/create_topics.sh) & /etc/confluent/docker/run
    healthcheck:
      test: /bin/kafka-topics --bootstrap-server 127.0.0.1:9092 --list
      interval: 3s

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 3s
      retries: 10

  # Registers schemas once schema-registry is up.
  schema-registrer:
    image: dwdraju/alpine-curl-jq
    volumes:
      - ./kafka:/kafka
    command: sh /kafka/create_schemas.sh
    environment:
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
    depends_on:
      schema-registry:
        condition: service_healthy

  mongodb:
    image: mongo:7.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    volumes:
      - ./test/init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
